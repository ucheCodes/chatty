@page "/users"
@inject IStore store
<section class="dynamic-table">
    <div class="table">
        <div class="table-header">
            <h3>Users</h3>
        </div>
        <div class="table-body">
            <table>
                <thead>
                    <tr>
                        <th>S/N</th>
                        <th>Name</th>
                        <th>Email</th>
                        <th>Mobile</th>
                        <th>Gender</th>
                        <th>Image</th>
                        @if (store.State().ActiveUser.ActiveUser.IsAdmin)
                        {
                           <th>Delete</th> 
                        }
                    </tr>
                </thead>
                <tbody>
                    @foreach (var user in users)
                    {
                        count++;
                        <tr>
                            <td>@count</td>
                            <td>@user.Name</td>
                            <td>@user.Email</td>
                            <td>@user.Mobile</td>
                            <td>@user.Gender</td>
                            <td><img src="@user.ImagePath" alt=""></td>
                            @if (store.State().ActiveUser.ActiveUser.IsAdmin)
                            {
                                <td @onclick="(() => {showDialog = true; deleteId = user.Id;})"><i class="fas fa-trash"></i></td>
                            }
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</section>

@if (showDialog)
{
    <section class="dialog">
        <div class="container">
            <span @onclick="(() => {showDialog=false;})">x</span>
            <em>Do you want to permanently delete this user account from this system?</em>
            <i @onclick="(() => DeleteUser(deleteId))" class="fas fa-trash" />
        </div>
    </section>
}

@code {
    List<Users> users = new();
    int count = 0;
    string deleteId = "";
    bool showDialog = false;
    protected override void OnInitialized()
    {
        users = database.ReadAll<string, Users>("Users").Values.ToList();
    }
    protected override void OnAfterRender(bool firstRender)
    {
        count = 0;
    }
    private void DeleteUser(string id)
    {
        if (id != "")
        {
            var isDel = database.Delete("Users", id);
            if (isDel)
            {
                users = users.Where(x => x.Id != id).ToList();
                showDialog = false;
            }
        }
    }
}

